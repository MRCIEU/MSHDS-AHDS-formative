?Arithmetic
?ceiling
round(0.5)
round(1.5)
round(0.15, 1)
1+2
1+2
1+2
x<-4
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
rm(list=ls())
source("~/.active-rstudio-document")
rm(list=ls())
source("~/.active-rstudio-document")
rm(list=ls())
number_of_eggs <- function(number_of_cupcakes){
cupcakes_eggs <- 2
N_batches <- number_of_cupcakes/12
N_eggs<-ceiling(N_batches*cupcakes_eggs)
return(N_eggs)
}
number_of_eggs(12)
number_of_eggs(24)
number_of_eggs(23)
number_of_eggs(1)
number_of_eggs(6)
number_of_eggs(7)
?round
trunc(4.5)
trunc(4.6)
trunc(4.76)
ceiling(4.5)
number_of_eggs(4)
number_of_eggs(6)
number_of_eggs(7)
cake_ingredients <- function(number_of_cupcakes){
cupcakes_eggs <- 2
cupcakes_other <- 4
N_batches <- number_of_cupcakes/12
N_eggs<-ceiling(N_batches*cupcakes_eggs)
N_other<-ceiling(N_batches*cupcakes_other)
return(list(eggs=N_eggs,other=N_other))
}
cake_ingredients(12)
cake_ingredients(6)
cake_ingredients(7)
cake_ingredients <- function(number_of_cupcakes){
cupcakes_eggs <- 2
cupcakes_other <- 4
cake_ratio <- cupcakes_other/cupcakes_eggs
N_batches <- number_of_cupcakes/12
N_eggs<-ceiling(N_batches*cupcakes_eggs)
N_other<-N_eggs*cake_ratio
return(list(eggs=N_eggs,other=N_other))
}
cake_ingredients(7)
onetoten<-1:10
onetoten
factorial(onetoten)
?factorial
month.days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month.days
(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month.days <- (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month.day <- 31
month.day
c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month.days <- (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month.days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
rm(month.day)
month.days
fruit.salad <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month.days
fruit.salad
x <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
x
month.days
state.name
?data
data()
month.name
has31days <- month.days == 31month.name[has31days]
has31days <- month.days == 31
month.name[has31days]
month.days == 31
which(month.days == TRUE)
which((month.days==31) == TRUE)
sum((month.days==31))
length(which((month.days==31) == TRUE))
length(has31days)
has31days <- month.days == 31
has31days
which(has31days==TRUE)
length(which(has31days==TRUE))
sum(has31days==TRUE)
# Part 3
# question 1
length(state.name)
length(state.area)
length(state.region)
# question 2
states <- data.frame(name=state.name,area=state.area,region=state.region)
head(states)
dim(states)
# question 3
states$name[states$region=="Northeast"]
# question 3b
states$area[states$region=="Northeast"]
# question 3c
states$name[states$area>100000]
1e+5
states$name[states$area>1e+05]
ls()
install.packages("lintr")
install.packages("styler")
install.packages("renv")
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
?while
help("while")
library(shiny); runApp('Documents/Teaching/Applied Health Data Science/Data challenge assessment/2023/marking/Student submissions/2347867/softdrinks_analysis/visualisation/shinyanalysis.R')
runApp('Documents/Teaching/Applied Health Data Science/Data challenge assessment/2023/marking/Student submissions/2370051/AHDS_assessment2_[2370051]/visualisation/shinyvisualisation.R')
runApp('Documents/Teaching/Applied Health Data Science/Data challenge assessment/2023/marking/Student submissions/2370051/AHDS_assessment2_[2370051]/visualisation/shinyvisualisation copy.R')
?od
?library
?system
?system2
?pskill
?reticulate
?log1p
library(tidyverse)
gh_users
data(gh_users)
library(repurrrsive)
install.packages(repurrrsive)
install.packages("repurrrsive")
library(repurrrsive)
gh_users
users <- tibble(user=gh_users)
users
users |> unnest_wider(users)
users |> unnest_wider()
users |> unnest_wider(user)
df <- tibble(
x = c(2, 3, 1, 1, NA),
y = letters[1:5],
z = runif(5)
)
df
df <- data.frame(
x = c(2, 3, 1, 1, NA),
y = letters[1:5],
z = runif(5)
)
df2 <- data.frame(
x = c(2, 3, 1, 1, NA),
y = letters[1:5],
z = runif(5)
)
df <- tibble(
x = c(2, 3, 1, 1, NA),
y = letters[1:5],
z = runif(5)
)
df
df2
df[!is.na(df$x) & df$x > 1, ]
glimpse(df)
head(df)
head(df2)
str(df2)
glimpse(df)
table1
#> # A tibble: 6 × 4
#>   country      year  cases population
#>   <chr>       <dbl>  <dbl>      <dbl>
#> 1 Afghanistan  1999    745   19987071
#> 2 Afghanistan  2000   2666   20595360
#> 3 Brazil       1999  37737  172006362
#> 4 Brazil       2000  80488  174504898
#> 5 China        1999 212258 1272915272
#> 6 China        2000 213766 1280428583
table2
#> # A tibble: 12 × 4
#>   country      year type           count
#>   <chr>       <dbl> <chr>          <dbl>
#> 1 Afghanistan  1999 cases            745
#> 2 Afghanistan  1999 population  19987071
#> 3 Afghanistan  2000 cases           2666
#> 4 Afghanistan  2000 population  20595360
#> 5 Brazil       1999 cases          37737
#> 6 Brazil       1999 population 172006362
#> # ℹ 6 more rows
table3
#> # A tibble: 6 × 3
#>   country      year rate
#>   <chr>       <dbl> <chr>
#> 1 Afghanistan  1999 745/19987071
#> 2 Afghanistan  2000 2666/20595360
#> 3 Brazil       1999 37737/172006362
#> 4 Brazil       2000 80488/174504898
#> 5 China        1999 212258/1272915272
#> 6 China        2000 213766/1280428583
table1
table1
library(tidyverse)
table1
?who2
?household
?who2
library(tidyverse)
library(haven)
# Read in demographic data from SAS file
demo_data <- read_xpt("../../data/original/DEMO_D.XPT")
setwd("~/Desktop/week5-tidyverse/code/3-tidyverse")
# Read in demographic data from SAS file
demo_data <- read_xpt("../../data/original/DEMO_D.XPT")
View(demo_data)
# Select participant ID, gender, age in months, ethnicity
demographics <- demo_data |>
select(SEQN, RIAGENDR, RIDAGEMN, RIDRETH1)
# Read in the body measurement data
bmx_d <- read_csv("../../data/original/BMX_D.csv")
bmx_d |>
janitor::clean_names()
install.packages("janitor")
bmx_d |>
janitor::clean_names()
bmx_d
bmx_d |>
janitor::clean_names() |>
select(!x1)
# Select participant ID, gender, age in months, ethnicity
demog <- demo_data |>
select(SEQN, RIAGENDR, RIDAGEMN, RIDRETH1)
demog_clean <- demog |>
janitor::clean_names()
demog_clean
bmx_d_clean |>
left_join(demog_clean)
bmx_d_clean <- bmx_d |>
janitor::clean_names() |>
select(!x1)
bmx_d_clean |>
left_join(demog_clean)
bmx_d_clean |>
left_join(demog_clean) |>
relocate(seqn, riagendr, ridagemn, gidreth1, .before = 2)
bmx_d_clean |>
left_join(demog_clean) |>
relocate(seqn, riagendr, ridagemn, ridreth1, .before = 2)
bmx_d_clean |>
left_join(demog_clean) |>
relocate(riagendr, ridagemn, ridreth1, .before = 2)
bmx_d_clean
bmx_d_demog <- bmx_d_clean |>
left_join(demog_clean) |>
relocate(riagendr, ridagemn, ridreth1, .before = 2)
?if_else
glimpse(bmx_d_demog)
# Read in the sample file and merge
sample_info <- read_csv("../../data/derived/sample.csv")
sample_info_clea <- sample_info |>
janitor::clean_names()
sample_info_clean <- sample_info |>
janitor::clean_names()
sample_info_clean
sample_info_clean <- sample_info |>
janitor::clean_names() |>
select(!x1)
sample_info_clean
bmx_d_demog_smp <- bmx_d_demog |>
left_join(sample_info_clean) |>
relocate(in_sample = insample, .after = 1)
bmx_d_demog_smp
bdds <- bmx_d_demog_smp
bdds |>
mutate(obesity = if_else(bmxbmi >= 30))
bdds |>
mutate(obesity = if_else(bmxbmi >= 30, 1, 0))
bdds |>
mutate(obesity = if_else(bmxbmi >= 30, 1, 0)) |>
relocate(bmxbmi, obesity, .after = ridreth1)
bdds |>
group_by(obesity) |>
summarise(mean(in_sample, na.rm=TRUE))
# Create a new obesity variable
bdds <- bdds |>
mutate(obesity = if_else(bmxbmi >= 30, 1, 0)) |>
relocate(bmxbmi, obesity, .after = ridreth1)
bdds |>
group_by(obesity) |>
summarise(mean(in_sample, na.rm=TRUE))
bdds |>
group_by(obesity) |>
summarise(mean(in_sample))
# What percentage of males and females have activity monitor data available?
bdds |>
group_by(riagendr) |>
summarise(mean(in_sample))
bdds |>
group_by(ridagemn > (16*12)) |>
summarise(mean(in_sample))
bdds |>
group_by(ridagemn > (16*12)) |>
summarise(max(bmxht))
bdds |>
group_by(ridagemn > (16*12)) |>
summarise(max(bmxht, na.rm=TRUE))
# Write the new body measurement data to the derived data directory
bdds |>
write_csv(../../data/derived/body_measurements.csv)
# Write the new body measurement data to the derived data directory
bdds |>
write_csv("../../data/derived/body_measurements.csv")
